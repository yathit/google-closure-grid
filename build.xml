<project name="grid" basedir="." default="deps">
    <dirname property="grid.dir" file="${ant.file.grid}"/>
    <property name="work.dir" location="${grid.dir}/.." />
    <property name="home.dir" location="${user.home}"/>
    <property name="db-work.dir" location="${home.dir}/db-work"/>
    <property name="sugarcrm.dir" location="${work.dir}/sugarcrm"/>
    <import file="${db-work.dir}/ydn-base/build.xml"/>
    <import file="${db-work.dir}/ydn/build.xml"/>
    <property name="flagfile" value="${ydn-base.dir}/flagfile.txt"/>
    <property name="closure-library.dir" value="${work.dir}/closure-library"/>
    <property name="closure-compiler.dir" value="${lib.dir}/closure-compiler"/>
    <property name="closure-compiler.jar" value="${closure-compiler.dir}/build/compiler.jar"/>
    <property name="closure-templates.dir" value="${lib.dir}/closure-templates"/>
    <property name="closure-stylesheets.dir" value="${lib.dir}/closure-stylesheets"/>
    <property name="google-sites-liberation.jar" value="${lib.dir}/google-sites-liberation/target/google-sites-liberation-1.0.4-SNAPSHOT-jar-with-dependencies.jar"/>
    <property name="js-test-driver.jar" value="${lib.dir}/js-test-driver/JsTestDriver.jar"/>
    <property name="outputwrapper.norun" value="(function(){%output%})();"/>
    <property name="outputwrapper.app" value="(function(){%output%})();app=runApp();"/>
    <property name="out.dir" location="${grid.dir}/jsc"/>


    <macrodef name="comp-adved" description="compile JS">
       <attribute name="input.fn" />
       <attribute name="output.fn" />
       <attribute name="entrypoint"/>
       <element name="opt-arg" optional="true"/>
       <sequential>
        <closure-compile compilationlevel="ADVANCED_OPTIMIZATIONS"
                         input="@{input.fn}"
                         input.dir="${grid.dir}/src"
                         output.fn="${out.dir}/@{output.fn}">
            <options>
                <opt-arg/>
                <arg line='-i "${grid.dir}/src/exports.js"'/>
                <arg line='-i "${grid.dir}/src/ui/exports.js"'/>
                <arg line='-i "${work.dir}/ydn/src/msg/exports.js"'/>
                <arg line='-f "--source_map_format=V3"'/>
                <arg line='-f "--create_source_map=${out.dir}/@{output.fn}.map"'/>
                <arg line='-p "${db-work.dir}/ydn-base/src"'/>
                <arg line='-p "${db-work.dir}/ydn-db/src"'/>
                <arg line='-p "${db-work.dir}/ydn-db-sync/src"'/>
                <arg line='-p "${db-work.dir}/ydn/src"'/>
                <arg line='-p "${work.dir}/ydn-api/js"'/>
                <arg line='-p "${work.dir}/sync-app/js"'/>
                <arg line='--path "${work.dir}/grid/src"'/>
                <arg line='-p "${db-work.dir}/gdata/src"'/>
                <arg line='-p "${db-work.dir}/ydn-db-fulltext/src"'/>
                <arg line='-p "${db-work.dir}/fullproof/js"'/>
                <arg line='-p "${db-work.dir}/natural/js"'/>
                <arg line='-f "--externs=${work.dir}/fullproof/externs/unicode.js"'/>
                <arg line='-f "--flagfile=${flagfile}"'/>
                <arg line='-f "--externs=${closure-compiler.dir}/contrib/externs/chrome_extensions.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-base/externs/misc.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-base/externs/atom.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-base/externs/gapi.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-base/externs/aws.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-base/externs/sugarcrm.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-base/externs/opensocial.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-base/externs/svg.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-base/externs/kineticjs.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-api/externs/misc.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn/externs/ydn-server.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-db/externs/misc.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-db/externs/schema.js"'/>
                <arg line='-f "--externs=${db-work.dir}/ydn-db/externs/websql.js"'/>
                <arg line='-f "--externs=${db-work.dir}/gdata/externs/gdata.js"'/>
                <arg line='-f "--output_wrapper=${outputwrapper.norun}"'/>
            </options>
        </closure-compile>
        <concat destfile="${out.dir}/@{output.fn}" append="true">
            //# sourceMappingURL=@{output.fn}.map
        </concat>
        <replace description="replace so with online repo path"
                 file="${out.dir}/@{output.fn}.map"
                 token="${work.dir}/"
                 value="http://localhost/"/>
       </sequential>
    </macrodef>


    <macrodef name="calc-deps" description="calculate dependency for testing">
        <attribute name="output.fn"/>
        <attribute name="input.dir"/>
        <attribute name="output-mode" default="deps"/>
        <element name="calc-options" optional="yes"/>
        <sequential>
            <exec executable="python" failonerror="true" logError="true">
                <arg value="${closure-library.dir}/closure/bin/calcdeps.py"/>
                <arg line='--dep "${closure-library.dir}"'/>
                <arg line='--path "@{input.dir}"'/>
                <arg line='--output_mode "@{output-mode}"'/>
                <arg line='--output_file "@{output.fn}"'/>
                <calc-options/>
            </exec>
        </sequential>
    </macrodef>

    <target name="deps" description="list dependency files">
        <delete file="${grid.dir}/src/deps.js"/>
        <calc-deps
                input.dir="${grid.dir}/src"
                output.fn="${grid.dir}/src/deps.js">
        </calc-deps>
    </target>


    <target name="build" description="build all distribution"
            depends="deps">

    </target>
</project>